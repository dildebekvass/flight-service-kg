#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π –ø—Ä–æ—Ñ–∏–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
import os

def add_profile_fields():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—è –ø—Ä–æ—Ñ–∏–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É user"""
    
    db_path = 'instance/flight_service.db'
    
    if not os.path.exists(db_path):
        print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞–π—Ç–µ –µ—ë –∑–∞–Ω–æ–≤–æ —Å –ø–æ–º–æ—â—å—é seed_db.py")
        return
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
    backup_path = 'flight_service_backup.db'
    import shutil
    shutil.copy2(db_path, backup_path)
    print(f"–°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: {backup_path}")
    
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ –Ω–æ–≤—ã–µ –ø–æ–ª—è
        cursor.execute("PRAGMA table_info(user)")
        columns = [column[1] for column in cursor.fetchall()]
        
        new_fields = ['phone', 'birth_date', 'passport_number', 'address', 
                     'nationality', 'avatar_filename', 'bio', 'updated_at']
        
        missing_fields = [field for field in new_fields if field not in columns]
        
        if not missing_fields:
            print("–í—Å–µ –ø–æ–ª—è –ø—Ä–æ—Ñ–∏–ª—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
            return
        
        print(f"–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è: {', '.join(missing_fields)}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è
        for field in missing_fields:
            if field == 'phone':
                cursor.execute('ALTER TABLE user ADD COLUMN phone VARCHAR(20)')
            elif field == 'birth_date':
                cursor.execute('ALTER TABLE user ADD COLUMN birth_date DATE')
            elif field == 'passport_number':
                cursor.execute('ALTER TABLE user ADD COLUMN passport_number VARCHAR(50)')
            elif field == 'address':
                cursor.execute('ALTER TABLE user ADD COLUMN address TEXT')
            elif field == 'nationality':
                cursor.execute('ALTER TABLE user ADD COLUMN nationality VARCHAR(50)')
            elif field == 'avatar_filename':
                cursor.execute('ALTER TABLE user ADD COLUMN avatar_filename VARCHAR(255)')
            elif field == 'bio':
                cursor.execute('ALTER TABLE user ADD COLUMN bio TEXT')
            elif field == 'updated_at':
                cursor.execute("ALTER TABLE user ADD COLUMN updated_at DATETIME")
        
        conn.commit()
        print("‚úÖ –ü–æ–ª—è –ø—Ä–æ—Ñ–∏–ª—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
        print("‚úÖ –¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –ø—Ä–æ—Ñ–∏–ª–∏")
        
    except Exception as e:
        conn.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –±—ç–∫–∞–ø–∞
        conn.close()
        shutil.copy2(backup_path, db_path)
        print("üîÑ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ –±—ç–∫–∞–ø–∞")
        
    finally:
        conn.close()

if __name__ == '__main__':
    add_profile_fields()