#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã –Ω–∞ PythonAnywhere
"""

import os
import sys

def check_system():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã Flight Service KG")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –≤–µ—Ä—Å–∏–∏
    print(f"‚úÖ Python –≤–µ—Ä—Å–∏—è: {sys.version}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Ç–∏
    current_path = os.getcwd()
    print(f"‚úÖ –¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞: {current_path}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    required_files = [
        'app/__init__.py',
        'app/models.py',
        'app/routes.py',
        'config.py',
        'requirements.txt'
    ]
    
    print("\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤:")
    for file in required_files:
        if os.path.exists(file):
            print(f"‚úÖ {file}")
        else:
            print(f"‚ùå {file} - –û–¢–°–£–¢–°–¢–í–£–ï–¢!")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
    try:
        import flask
        print(f"‚úÖ Flask: {flask.__version__}")
    except ImportError:
        print("‚ùå Flask –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    
    try:
        import flask_sqlalchemy
        print(f"‚úÖ Flask-SQLAlchemy: {flask_sqlalchemy.__version__}")
    except ImportError:
        print("‚ùå Flask-SQLAlchemy –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    
    try:
        import flask_login
        print(f"‚úÖ Flask-Login: {flask_login.__version__}")
    except ImportError:
        print("‚ùå Flask-Login –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    print("\nüóÉÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    if os.path.exists('instance/flight_service.db'):
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–∞")
        
        # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        try:
            from app import create_app, db
            from app.models import User, Company, Flight
            
            app = create_app()
            with app.app_context():
                users_count = User.query.count()
                companies_count = Company.query.count()
                flights_count = Flight.query.count()
                
                print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}")
                print(f"‚úÖ –ö–æ–º–ø–∞–Ω–∏–π: {companies_count}")
                print(f"‚úÖ –†–µ–π—Å–æ–≤: {flights_count}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
    else:
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –ó–∞–ø—É—Å—Ç–∏—Ç–µ init_production_db.py")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print("\nüîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    env_vars = ['FLASK_ENV', 'SECRET_KEY', 'DATABASE_URL']
    for var in env_vars:
        value = os.environ.get(var)
        if value:
            if var == 'SECRET_KEY':
                print(f"‚úÖ {var}: {'*' * len(value)}")
            else:
                print(f"‚úÖ {var}: {value}")
        else:
            print(f"‚ö†Ô∏è {var}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    
    print("\n" + "=" * 50)
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == '__main__':
    check_system()