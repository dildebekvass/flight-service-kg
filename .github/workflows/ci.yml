name: Flight Service KG CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Check code style with flake8
      run: |
        cd backend
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test application startup
      run: |
        cd backend
        python -c "from app import create_app; app = create_app(); print('✅ App created successfully')"
    
    - name: Check database models
      run: |
        cd backend
        python -c "
        from app import create_app, db
        from app.models import User, Company, Flight, Ticket
        app = create_app()
        with app.app_context():
            db.create_all()
            print('✅ Database models work correctly')
        "

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
    
    - name: Install security scanner
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
    
    - name: Check for security vulnerabilities
      run: |
        cd backend
        pip install -r requirements.txt
        safety check
        bandit -r app/ -f json || true